/* scenarioo-server
 * Copyright (C) 2014, scenarioo.org Development Team
 * 
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */


apply plugin: 'war'
apply plugin: 'eclipse-wtp'

dependencies {
    compile 'org.jboss.resteasy:resteasy-jaxrs:2.3.3.Final'
    compile 'org.jboss.resteasy:resteasy-jaxb-provider:2.3.3.Final'
    compile 'org.jboss.resteasy:resteasy-jackson-provider:2.3.3.Final'
	runtime 'com.thetransactioncompany:cors-filter:1.7.1'
    providedCompile 'javax.servlet:servlet-api:2.5'
}

eclipse {
  wtp {
    component {
      contextPath = 'scenarioo'
      deployName = 'scenarioo'
    }
  }
}

// Prevent Eclipse "Gradle -> Refresh All" to execute cleanEclipseJdt,
// because it would delete our version of the org.eclipse.jdt.ui.prefs file.
cleanEclipse.dependsOn = cleanEclipse.taskDependencies.values - cleanEclipseJdt


task printPathConfigInformationForNodeJSAndGrunt << {
	if (project.hasProperty('pathToNodeJS')) {
        println "Path to Node JS was configued as: " + pathToNodeJS  	
    } else {
    	println "Path to Node JS not specified, set property 'pathToNodeJS' in case the PATH variable is not set properly or not propagated to the client's build script."        
    }
    if (project.hasProperty('installGrunt')) {
        println "installGrunt is specified, this will trigger installation of grunt in client build: " + installGrunt + " (this value should be 'installGrunt')"
    } else {
        println "installGrunt: property is undefined, this means grunt is assumed to be installed already."    
    }
}

task createVersionPropertiesFile << {
	File versionFile = new File(sourceSets.main.output.classesDir.getAbsolutePath() + '/version.properties');
	versionFile.write('version=' + version + '\nbuild-date=' + new Date())
}

war {
    from '../scenarioo-client/dist'
    from(sourceSets.main.output.classesDir) {
        into('WEB-INF/classes')
    }
	archiveName 'scenarioo-' + version + '.war'
}

war.doLast {
    copy {
        from ('build/libs/')
        into ('build/libs/')
        include('scenarioo-' + version + '.war')
        rename('scenarioo-' + version + '.war', 'scenarioo-latest.war')
    }
}

war.dependsOn createVersionPropertiesFile