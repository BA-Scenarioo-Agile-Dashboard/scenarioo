'use strict';

var BaseWebPage = require('./baseWebPage.js'),
    util = require('util');

function EditorPage(overridePath) {
    if (overridePath && overridePath.length > 0) {
        BaseWebPage.call(this, overridePath);
    } else {
        BaseWebPage.call(this, '/');
    }

    this.saveButton = element(by.id('save'));
    this.saveSketchSuccessfulMessage = element(by.id('saveSketchSuccessfulMessage'));

}

util.inherits(EditorPage, BaseWebPage);


EditorPage.prototype.enterSketchInformation = function () {
    element(by.id('issueName')).sendKeys('e2e generated issue');
    element(by.id('issueAuthor')).sendKeys('protractor e2e');
    element(by.id('issueDescription')).sendKeys('this issue was generated by e2e tests');
};

EditorPage.prototype.clickSaveButton = function () {
    this.saveButton.click();
};

EditorPage.prototype.assertSaveButtonIsDisabled = function () {
    expect(this.saveButton.isEnabled()).toBe(false);
};

EditorPage.prototype.assertPageIsDisplayed = function () {
    expect(this.saveButton.isDisplayed()).toBe(true);
};

EditorPage.prototype.assertSaveSketchSuccessfulMessageIsNotPresent = function () {
    expect(this.saveSketchSuccessfulMessage.isPresent()).toBe(false);
};

EditorPage.prototype.assertSaveSketchSuccessfulMessageIsDisplayed = function () {
    expect(this.saveSketchSuccessfulMessage.isDisplayed()).toBe(true);
};

module.exports = EditorPage;
