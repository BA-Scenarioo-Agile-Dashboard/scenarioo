/* scenarioo-client
 * Copyright (C) 2014, scenarioo.org Development Team
 * 
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
import org.gradle.api.tasks.Exec
import org.apache.tools.ant.taskdefs.condition.Os

apply plugin: 'base'

task npm(type: Exec) {
   group = "Build"
   description = "Installs all Node.js dependencies defined in package.json"
   commandLine = ["npm", "install"]
   inputs.file "package.json"
   outputs.dir "node_modules"
}

task bower(type: Exec) {
	group ="Build"
	description = "Installs all app components defined in bower.json"
	commandLine = ["bower", "install"]
	inputs.file "bower.json"
}


class GruntTask extends Exec {
   private String gruntExecutable = Os.isFamily(Os.FAMILY_WINDOWS) ? "grunt.cmd" : "grunt"
   def gruntArgs = ""

   public GruntTask() {
       super()
       this.setExecutable(gruntExecutable)
   }

   public void setGruntArgs(String gruntArgs) {
       this.args = "$gruntArgs".trim().split(" ") as List
   }
}

task test(type: GruntTask) {
   group = "Verification"
   description = "Runs the unit tests."
   gruntArgs = "test:unit"
}


task build(type: GruntTask) {
   group = "Build"
   description = "Builds the client web app."
   gruntArgs = "build"
}

task cleanApp(type: GruntTask) {
	group = "Build"
	description ="Cleans the client web app."
	gruntArgs = "clean"
}

clean.dependsOn cleanApp
cleanApp.dependsOn npm

bower.dependsOn npm

build.dependsOn npm
build.dependsOn bower
test.dependsOn build

assemble.dependsOn test